# Write down config entries differing from config.default.yaml

countries: [IS]

run:
  name: 2030_high_h2 # use this to keep track of runs with different settings
  shared_cutouts: true # set to true to share the default cutout(s) across runs
  # Note: value false requires build_cutout to be enabled
  download_osm_data: false # If 'true', OpenStreetMap data will be downloaded for the above given countries

enable:
  retrieve_databundle: false #  Recommended 'true', for the first run. Otherwise data might be missing.
  retrieve_databundle_sector: false

scenario:
  clusters: [30m]
  opts: [Co2L-1h]

cluster_options:
  alternative_clustering: false # "False" use Voronoi shapes, "True" use GADM shapes  
  simplify_network:
    exclude_carriers: [solar]
    p_threshold_merge_isolated: 1000 # [MW] isolated buses are being merged into a single isolated bus if a bus mean power is below the specified threshold
  cluster_network:
    feature: onwind-time
    exclude_carriers: [solar]

load_options:
  ssp: ssp2-2.6   # shared socio-economic pathway (GDP and population growth) scenario to consider
  weather_year: 2013 # Load scenarios available with different weather year (different renewable potentials)
  prediction_year: 2030 # Load scenarios available with different prediction year (GDP, population)
  scale: 1.14 # scales all load time-series, i.e. 2 = doubles load

electricity:
  base_voltage: 220.
  powerplants_filter: (DateOut >= 2022 or DateOut != DateOut) and DateIn <= 2030
  custom_powerplants: replace   #  "false" use only powerplantmatching (ppm) data, "merge" combines ppm and custom powerplants, "replace" use only custom powerplants
  operational_reserve: # like https://genxproject.github.io/GenX.jl/stable/Model_Reference/core/#Operational-Reserves
    activate: false
    epsilon_load: 0.02 # share of total load
    epsilon_vres: 0.02 # share of total renewable supply
    contingency: 200 # fixed capacity in MW
  extendable_carriers:
    Generator: [onwind, offwind-ac, offwind-dc, geothermal, OCGT]
    StorageUnit: [battery] # battery, H2
    Store: [H2] #[battery, H2]
    Link: []
  estimate_renewable_capacities:
    technology_mapping:
      Onshore: []

renewable:
  hydro:
    extendable: true
    efficiency: 0.95
    multiplier: 22 # inflow multiplier
    hydro_capital_cost: true
  solar:
    extendable: false

costs:
  year: 2030
  output_currency: GBP

sector:
  chp: false
  electricity_distribution_grid: false # adds low voltage buses and shifts AC loads, BEVs, heat pumps, and resistive heaters, micro CHPs to low voltage buses if technologies are present
  solar_rooftop: false # adds distribution side customer rooftop PV (only work if electricity_distribution_grid: true)
  home_battery: false # adds home batteries to low voltage buses ((only work if electricity_distribution_grid: true)
  solar_thermal: false


demand_data:
  update_data: true # if true, the workflow downloads the energy balances data saved in data/demand/unsd/data again. Turn on for the first run.
  base_year: 2019

  other_industries: false # Whether or not to include industries that are not specified. some countries have has exaggerated numbers, check carefully.
  aluminium_year: 2019 # Year of the aluminium demand data specified in `data/AL_production.csv`

policy_config:
  hydrogen:
    temporal_matching: no_res_matching   # either "h2_yearly_matching", "h2_monthly_matching", "no_res_matching"
    spatial_matching: false
    additionality: false # RE electricity is equal to the amount required for additional hydrogen export compared to the 0 export case ("reference_case")
    allowed_excess: 1.2
    is_reference: false # Whether or not this network is a reference case network, relevant only if additionality is _true_
    path_to_ref: results/2030_BAU_p2024/networks/elec_s_30m_ec_lcopt_Co2L-1h.nc   # Path to the reference case network for additionality calculation, relevant only if additionality is _true_ and is_reference is _false_
    re_country_load: false # Set to "True" to force the RE electricity to be equal to the electricity required for hydrogen export and the country electricity load. "False" excludes the country electricity load from the constraint.

export:
  endogenous: true
  store: true # [True, False] # specifies whether an export store to balance demand is implemented
  h2export: 1.1 # Yearly export demand in TWh. Only considered, if ["export"]["endogenous"] is set to false
  export_profile: constant   # use "ship" or "constant". Only considered, if ["export"]["endogenous"] is set to false
